{"version":3,"sources":["components/auth/authProvider.js","components/scratchers/scratchers.js","components/scratchers/scratchersCreate.js","components/scratchers/scratchersEdit.js","components/users/users.js","components/users/usersCreate.js","components/users/usersEdit.js","components/List.js","customRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["authProvider","login","username","password","request","Request","method","mode","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","text","auth","localStorage","setItem","catch","err","logout","removeItem","Promise","resolve","checkError","reject","checkAuth","getItem","getPermissions","scratchersList","props","Datagrid","rowClick","TextField","source","EditButton","DeleteButton","scratchersCreate","Create","title","SimpleForm","TextInput","ArrayInput","SimpleFormIterator","scratchersEdit","Edit","disabled","usersList","usersCreate","PasswordInput","BooleanInput","label","columns","id","minWidth","format","value","useStyles","makeStyles","root","width","container","maxHeight","List","useState","scratchers","setScratchers","classes","useEffect","a","axios","create","baseURL","get","data","console","log","fetchData","Paper","className","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","align","style","TableBody","row","hover","role","tabIndex","exact","path","component","noLayout","dataProvider","jsonServerProvider","url","options","Accept","token","set","fetchUtils","fetchJson","App","Admin","customRoutes","Resource","name","list","edit","usersEdit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uMA0CgBA,EA1CK,CACjBC,MAAO,YAA8B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,SACVC,EAAU,IAAIC,QAAQ,0CAA2C,CACnEC,OAAQ,OACRC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAER,WAAUC,aACjCQ,QAAS,IAAIC,QAAQ,CAAE,eAAgB,uBAE3C,OAAOC,MAAMT,GACRU,MAAK,SAAAC,GACF,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC5C,MAAM,IAAIC,MAAMF,EAASG,YAG7B,OAAOH,EAASI,UAEnBL,MAAK,SAAAM,GACFC,aAAaC,QAAQ,OAAQF,MAEhCG,OAAM,SAACC,GACJ,MAAM,IAAIP,MAAM,qBAG7BQ,OAAQ,WAEH,OADAJ,aAAaK,WAAW,QACjBC,QAAQC,WAEnBC,WAAY,YACR,OAAe,MADS,EAAbb,QAEPK,aAAaK,WAAW,QACjBC,QAAQG,UAEZH,QAAQC,WAEnBG,UAAW,WACP,OAAOV,aAAaW,QAAQ,QACtBL,QAAQC,UACRD,QAAQG,UAElBG,eAAgB,kBAAMN,QAAQC,Y,4DCvBnBM,EAbQ,SAAAC,GAAK,OACzB,cAAC,IAAD,2BAAUA,GAAV,aACI,eAACC,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACI,cAACC,EAAA,EAAD,CAAWC,OAAO,cAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,qBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,cAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,cAClB,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,W,6CCUIC,EAlBU,SAACP,GACtB,OACI,cAACQ,EAAA,EAAD,yBAAQC,MAAM,iBAAoBT,GAAlC,aACI,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWP,OAAO,cAClB,cAACO,EAAA,EAAD,CAAWP,OAAO,qBAClB,cAACQ,EAAA,EAAD,CAAYR,OAAO,YAAnB,SACI,cAACS,EAAA,EAAD,UACI,cAACF,EAAA,EAAD,CAAWP,OAAO,SAI1B,cAACO,EAAA,EAAD,CAAWP,OAAO,qB,SCOnBU,EAnBQ,SAACd,GACpB,OACI,cAACe,EAAA,EAAD,yBAAMN,MAAM,uBAA0BT,GAAtC,aACI,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWK,UAAQ,EAACZ,OAAO,OAC3B,cAACO,EAAA,EAAD,CAAWP,OAAO,cAClB,cAACO,EAAA,EAAD,CAAWP,OAAO,qBAClB,cAACQ,EAAA,EAAD,CAAYR,OAAO,YAAnB,SACI,cAACS,EAAA,EAAD,UACI,cAACF,EAAA,EAAD,CAAWP,OAAO,SAI1B,cAACO,EAAA,EAAD,CAAWP,OAAO,qBCDnBa,EAXG,SAAAjB,GAAK,OACpB,cAAC,IAAD,2BAAUA,GAAV,aACI,eAACC,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACI,cAACC,EAAA,EAAD,CAAWC,OAAO,aAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,W,kBCKIY,EAZK,SAAClB,GACjB,OACI,cAACQ,EAAA,EAAD,yBAAQC,MAAM,iBAAoBT,GAAlC,aACI,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWP,OAAO,aAClB,cAACe,EAAA,EAAD,CAAef,OAAO,aACtB,cAACgB,EAAA,EAAD,CAAcC,MAAM,WAAWjB,OAAO,oBCOvCU,EAbQ,SAACd,GACpB,OACI,cAACe,EAAA,EAAD,yBAAMN,MAAM,kBAAqBT,GAAjC,aACI,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWK,UAAQ,EAACZ,OAAO,OAC3B,cAACO,EAAA,EAAD,CAAWP,OAAO,aAClB,cAACe,EAAA,EAAD,CAAef,OAAO,aACtB,cAACgB,EAAA,EAAD,CAAcC,MAAM,WAAWjB,OAAO,oB,qICChDkB,EAAU,CACZ,CAAEC,GAAI,YAAaF,MAAO,OAAQG,SAAU,KAC5C,CAAED,GAAI,mBAAoBF,MAAO,cAAeG,SAAU,KAC1D,CACED,GAAI,YACJF,MAAO,OACPG,SAAU,IACVC,OAAQ,SAACC,GAAD,gBAAcA,KAExB,CACEH,GAAI,YACJF,MAAO,OACPG,SAAU,MAKRG,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,QAETC,UAAW,CACTC,UAAW,OA8DFC,EA1DF,WAAO,IAAD,EACqBC,mBAAS,IAD9B,mBACRC,EADQ,KACIC,EADJ,KAETC,EAAUV,IAiBhB,OAdAW,qBAAU,YACS,uCAAG,4BAAAC,EAAA,+EAEaC,IAAMC,OAAO,CAACC,QAJO,2BAIGC,IAAI,KAFzC,OAEJ/D,EAFI,OAGVwD,EAAcxD,EAASgE,MAHb,gDAKVC,QAAQC,IAAR,MALU,yDAAH,qDAQfC,KACD,IAKH,cAACC,EAAA,EAAD,CAAOC,UAAWZ,EAAQR,KAA1B,SACE,cAACqB,EAAA,EAAD,CAAgBD,UAAWZ,EAAQN,UAAnC,SACE,eAACoB,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,eAA/B,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGjC,EAAQkC,KAAI,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,CAEEC,MAAOF,EAAOE,MACdC,MAAO,CAAEpC,SAAUiC,EAAOjC,UAH5B,SAKGiC,EAAOpC,OAJHoC,EAAOlC,WASpB,cAACsC,EAAA,EAAD,UACG1B,GAAcA,EAAWqB,KAAI,SAACM,GAC7B,OACE,cAACP,EAAA,EAAD,CAAUQ,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,SACG3C,EAAQkC,KAAI,SAACC,GACZ,IAAM/B,EAAQoC,EAAIL,EAAOlC,IACzB,OACE,cAACmC,EAAA,EAAD,CAA2BC,MAAOF,EAAOE,MAAzC,SACGF,EAAOhC,QAA2B,kBAAVC,EAAxB,WAAiD+B,EAAOhC,OAAOC,GAA/D,KAA2EA,GAD9D+B,EAAOlC,QAJsBuC,EAAIvC,iBCvExD,GACX,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,QAAQC,UAAWnC,EAAMoC,UAAQ,KCoBjDC,EAAeC,YAFmC,WAVrC,SAACC,GAAuB,IAAlBC,EAAiB,uDAAP,GAC7BA,EAAQjG,UACViG,EAAQjG,QAAU,IAAIC,QAAQ,CAAEiG,OAAQ,sBAG1C,IAAMC,EAAQzF,aAAaW,QAAQ,QAEnC,OADA4E,EAAQjG,QAAQoG,IAAI,OAAQD,GACrBE,IAAWC,UAAUN,EAAKC,MAgBpBM,MATf,WACG,OACI,eAACC,EAAA,EAAD,CAAOC,aAAcA,EAAcX,aAAcA,EAAczG,aAAcA,EAAc4C,MAAM,gBAAjG,UACI,cAACyE,EAAA,EAAD,CAAUC,KAAK,iBAAiBC,KAAMrF,EAAgB0C,OAAQlC,EAAkB8E,KAAMvE,IACtF,cAACoE,EAAA,EAAD,CAAUC,KAAK,QAAQC,KAAMnE,EAAWwB,OAAQvB,EAAamE,KAAMC,QCpB/DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9G,MAAK,YAAkD,IAA/C+G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.22092560.chunk.js","sourcesContent":["const authProvider = {\n    login: ({ username, password }) =>  {\n        const request = new Request('http://localhost:4000/api/v1/users/auth', {\n            method: 'post',\n            mode: \"cors\",\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                \n                return response.text();\n            })\n            .then(auth => {\n                localStorage.setItem('auth', auth);\n            })\n            .catch((err) => {\n                throw new Error('Network error')\n            });\n    },\n   logout: () => {\n        localStorage.removeItem('auth');\n        return Promise.resolve();\n    },\n    checkError: ({ status }) => {\n        if (status === 401) {\n            localStorage.removeItem('auth');\n            return Promise.reject();\n        } \n        return Promise.resolve();\n    },\n    checkAuth: () => {\n        return localStorage.getItem('auth')\n            ? Promise.resolve()\n            : Promise.reject();\n    },\n    getPermissions: () => Promise.resolve(),\n };\n\n export default authProvider;","import React from 'react';\nimport { List, Datagrid, TextField, EditButton, DeleteButton } from 'react-admin';\n\nconst scratchersList = props => (\n   <List {...props}>\n       <Datagrid rowClick=\"edit\">\n           <TextField source=\"item_name\" />\n           <TextField source=\"item_description\" />\n           <TextField source=\"item_size\" />\n           <TextField source=\"item_cost\" />\n           <EditButton  />\n           <DeleteButton  />\n       </Datagrid>\n   </List>\n);\n\nexport default scratchersList","import React from 'react';\nimport { Create, SimpleForm, TextInput, ArrayInput, SimpleFormIterator } from 'react-admin';\n\nconst scratchersCreate = (props) => {\n    return (\n        <Create title='Create a Post' {...props}>\n            <SimpleForm>\n                <TextInput source=\"item_name\" />\n                <TextInput source=\"item_description\" />\n                <ArrayInput source=\"item_size\">\n                    <SimpleFormIterator>\n                        <TextInput source=\"\" />\n                    </SimpleFormIterator>\n                </ArrayInput>                \n\n                <TextInput source=\"item_cost\" />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default scratchersCreate\n","import React from 'react';\nimport { Edit, SimpleForm, TextInput, ArrayInput, SimpleFormIterator } from 'react-admin';\n\nconst scratchersEdit = (props) => {\n    return (\n        <Edit title='Edit Scratcher List' {...props}>\n            <SimpleForm>\n                <TextInput disabled source=\"id\" /> \n                <TextInput source=\"item_name\" />\n                <TextInput source=\"item_description\" />\n                <ArrayInput source=\"item_size\">\n                    <SimpleFormIterator>\n                        <TextInput source=\"\" />\n                    </SimpleFormIterator>\n                </ArrayInput>                \n\n                <TextInput source=\"item_cost\" />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default scratchersEdit","import React from 'react';\nimport { List, Datagrid, TextField, EditButton, DeleteButton } from 'react-admin';\n\n\nconst usersList = props => (\n   <List {...props}>\n       <Datagrid rowClick=\"edit\">\n           <TextField source=\"username\" />\n           <TextField source=\"is_admin\" />\n           <EditButton  />\n           <DeleteButton  />\n       </Datagrid>\n   </List>\n);\n\nexport default usersList","import React from 'react';\nimport { Create, SimpleForm, TextInput, PasswordInput,  BooleanInput } from 'react-admin';\n\nconst usersCreate = (props) => {\n    return (\n        <Create title='Create a User' {...props}>\n            <SimpleForm>\n                <TextInput source=\"username\" />\n                <PasswordInput source=\"password\" />\n                <BooleanInput label=\"is_admin\" source=\"is_admin\" />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default usersCreate","import React from 'react';\nimport { Edit, SimpleForm, TextInput, BooleanInput, PasswordInput } from 'react-admin';\n\nconst scratchersEdit = (props) => {\n    return (\n        <Edit title='Edit User List' {...props}>\n            <SimpleForm>\n                <TextInput disabled source=\"id\" /> \n                <TextInput source=\"username\" />\n                <PasswordInput source=\"password\" />\n                <BooleanInput label=\"is_admin\" source=\"is_admin\" />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default scratchersEdit","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n    { id: 'item_name', label: 'Name', minWidth: 170 },\n    { id: 'item_description', label: 'Description', minWidth: 100 },\n    {\n      id: 'item_size',\n      label: 'Size',\n      minWidth: 170,\n      format: (value) => `${value}`\n    },\n    {\n      id: 'item_cost',\n      label: 'Cost',\n      minWidth: 170,\n    },\n  ];\n\n\n  const useStyles = makeStyles({\n    root: {\n      width: '100%',\n    },\n    container: {\n      maxHeight: 440,\n    },\n  });\n\nconst List = () => {\n    const [scratchers, setScratchers] = useState([]); \n    const classes = useStyles();\n\n    const baseURL = process.env.NODE_ENV === 'production' ? '/api/v1/backscratchers' : 'http://localhost:4000/api/v1/backscratchers';\n    useEffect(() => {\n        const fetchData = async() => {\n            try{\n                const response = await axios.create({baseURL}).get('/');\n                setScratchers(response.data);\n            } catch(err){\n                console.log(err);\n            }\n        }\n        fetchData();\n    }, []); \n\n\n\n    return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {scratchers && scratchers.map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'object' ? `[${column.format(value)}]` : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n    )\n}\n\nexport default List\n","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport List from './components/List';\n\n\nexport default [\n    <Route exact path=\"/list\" component={List} noLayout/>,\n];","import React from 'react';\nimport { Admin, Resource, fetchUtils } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport authProvider from './components/auth/authProvider';\nimport scratchersList from './components/scratchers/scratchers';\nimport scratchersCreate from './components/scratchers/scratchersCreate';\nimport scratchersEdit from './components/scratchers/scratchersEdit';\nimport usersList from './components/users/users';\nimport usersCreate from './components/users/usersCreate';\nimport usersEdit from './components/users/usersEdit';\n\nimport customRoutes from './customRoutes';\n\n\nconst httpClient = (url, options = {}) => {\n  if(!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json'});\n  }\n\n  const token = localStorage.getItem('auth');\n  options.headers.set('auth', token)\n  return fetchUtils.fetchJson(url, options);\n}\n\nconst baseURL = process.env.NODE_ENV === 'production' ? '/api/v1' : \"http://localhost:4000/api/v1\";\n\nconst dataProvider = jsonServerProvider(baseURL, httpClient);\n\nfunction App() {\n   return (\n       <Admin customRoutes={customRoutes} dataProvider={dataProvider} authProvider={authProvider} title=\"scratch.bling\">\n           <Resource name=\"backscratchers\" list={scratchersList} create={scratchersCreate} edit={scratchersEdit}/>\n           <Resource name=\"users\" list={usersList} create={usersCreate} edit={usersEdit} />\n       </Admin>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}